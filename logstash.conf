input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{LOGLEVEL:log_level} - %{WORD:component}( - %{WORD:action})?( - %{DATA:details})?" }
  }
  
  # Parse HTTP logs 
  if [component] == "HTTP" {
    grok {
      match => { "details" => "%{WORD:method} %{URIPATHPARAM:path} - Status: %{NUMBER:status_code} - Time: %{NUMBER:response_time}ms - IP: %{IP:client_ip}" }
    }
  }
  
  # Parse AUTH logs
  if [component] == "AUTH" {
    grok {
      match => { "details" => "User: %{USERNAME:username} - IP: %{IP:client_ip}( - Agent: %{GREEDYDATA:user_agent})?" }
    }
  }
  
  date {
    match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "medical-chatbot-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}
