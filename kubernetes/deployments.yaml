# Infrastructure Components
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: medical-chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
        ports:
        - containerPort: 9200
        - containerPort: 9300
        env:
        - name: discovery.type
          value: "single-node"
        - name: xpack.security.enabled
          value: "false"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 2Gi
        volumeMounts:
        - name: elasticsearch-storage
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elasticsearch-storage
        persistentVolumeClaim:
          claimName: elasticsearch-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: medical-chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.6.0
        ports:
        - containerPort: 5044
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: medical-chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.6.0
        ports:
        - containerPort: 5601
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch:9200"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
---
# Application Components
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: medical-chatbot
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: local/backend:latest  # Changed for Minikube
        imagePullPolicy: Never  # Added for Minikube
        ports:
        - containerPort: 8000
        env:
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGODB_URL
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ACCESS_TOKEN_EXPIRE_MINUTES
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: SECRET_KEY
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
      # Filebeat sidecar container
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:8.6.0
        args: ["--strict.perms=false"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: filebeat-config
          mountPath: /usr/share/filebeat/filebeat.yml
          subPath: filebeat.yml
        - name: logs-volume
          mountPath: /app/logs  # Changed to match the backend's mount path
      volumes:
      - name: logs-volume
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: filebeat-config
        configMap:
          name: filebeat-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: medical-chatbot
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: local/frontend:latest  # Changed for Minikube
        imagePullPolicy: Never  # Added for Minikube
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
