apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: medical-chatbot
data:
  MONGODB_URL: "mongodb://mongodb-external:27017/medicaldb"
  ACCESS_TOKEN_EXPIRE_MINUTES: "60"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: medical-chatbot
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{LOGLEVEL:log_level} - %{WORD:component}( - %{WORD:action})?( - %{DATA:details})?" }
      }
      
      # Parse HTTP logs 
      if [component] == "HTTP" {
        grok {
          match => { "details" => "%{WORD:method} %{URIPATHPARAM:path} - Status: %{NUMBER:status_code} - Time: %{NUMBER:response_time}ms - IP: %{IP:client_ip}" }
        }
      }
      
      # Parse AUTH logs
      if [component] == "AUTH" {
        grok {
          match => { "details" => "User: %{USERNAME:username} - IP: %{IP:client_ip}( - Agent: %{GREEDYDATA:user_agent})?" }
        }
      }
      
      date {
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
        target => "@timestamp"
      }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "medical-chatbot-logs-%{+YYYY.MM.dd}"
      }
      stdout { codec => rubydebug }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: medical-chatbot
data:
  filebeat.yml: |
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /logs/app.log
      multiline:
        pattern: '^\d{4}-\d{2}-\d{2}'
        negate: true
        match: after
    
    output.logstash:
      hosts: ["logstash:5044"]
    
    logging.level: info
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: medical-chatbot
type: Opaque
data:
  # Base64 encoded values
  SECRET_KEY: RVFxZXhsaTBKOHlHNzM1MGNlUjl1MV9SeXNqUmZweGZQbWVCazJVWEIwVQ==  # EQqexli0J8yG7350ceR9u1_RysjRfpxfPmeBk2UXB0U
